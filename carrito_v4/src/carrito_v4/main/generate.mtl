[comment encoding = UTF-8 /]
[module generate('http://www.eclipse.org/uml2/5.0.0/UML')]

[import carrito_v4::main::android::config::generateConfigFiles/]
[import carrito_v4::main::android::config::generateBuildGradle/]

[import carrito_v4::main::android::beans::beansGenAndroid/]

[import carrito_v4::main::android::rest::generateRestInterface/]
[import carrito_v4::main::android::rest::generateRestClient/]


[import carrito_v4::main::android::bd::createAndroidDatabase/]
[import carrito_v4::main::android::bd::tables::generateDbTables/]
[import carrito_v4::main::android::bd::dao::generateDaoAndroid/]

[import carrito_v4::main::android::files::createFileHelper/]

[import carrito_v4::main::android::keyvalue::createSharedHelper/]

[import carrito_v4::main::android::adapter::generateBDAdapters/]
[import carrito_v4::main::android::adapter::generateKVAdapters/]

[import carrito_v4::main::android::activities::generateMainActivity/]
[import carrito_v4::main::android::activities::generateBDActivities/]
[import carrito_v4::main::android::activities::generateFileActivities/]
[import carrito_v4::main::android::activities::generateKVActivities/]
[import carrito_v4::main::android::activities::generateRestActivities/]
[import carrito_v4::main::android::activities::generateBDFormActivities/]
[import carrito_v4::main::android::activities::generateKVFormActivities/]
[import carrito_v4::main::android::activities::generateSensorActivities/]

[import carrito_v4::main::windows::pages::generateMainPage/]
[import carrito_v4::main::windows::pages::generateBDPages/]
[import carrito_v4::main::windows::pages::generateBDCreateFormPage/]
[import carrito_v4::main::windows::pages::generateBDDeleteUpdateFormPage/]
[import carrito_v4::main::windows::pages::generateFilePages/]
[import carrito_v4::main::windows::pages::generateKVPages/]
[import carrito_v4::main::windows::pages::generateKVDeleteUpdateFormPage/]
[import carrito_v4::main::windows::pages::generateRestPages/]
[import carrito_v4::main::windows::pages::generateSensorsPages/]

[import carrito_v4::main::windows::beans::beansGenWindows/]

[import carrito_v4::main::windows::generateAppPage/]

[import carrito_v4::main::windows::bd::createWindowsDatabaseHelper/]
[import carrito_v4::main::windows::bd::dao::generateDaoWindows/]

[import carrito_v4::main::windows::files::createFileHelperWindows/]

[import carrito_v4::main::windows::keyvalue::createSharedHelperWindows/]

[import carrito_v4::main::windows::rest::generateRestWindowsInterface/]

[import services::uml2services/]

[template public generateElement(model: Model)]
[comment @main/]
[let aPackages: Sequence(Package) = model.eAllContents(Package) ]

[generateGeneralAndroidClasses(model)/]
[generateGeneralWindowsClasses(model)/]

[for (aPackage : Package | aPackages)]
[let aClasses: Set(Class) = aPackage.ownedElement->filter(Class) ]
[let p : Package = aPackage.ancestors(Package)->first()]	
	
	[if (aPackage.hasStereotype('DataPersistence'))]
	    [comment]Solo creamos este archivo Si existe por lo menos una entidad tipo DATABASE[/comment]
		[if (aPackage.isPackageHasThisPropertyStereotype('persistentEntity', 'persistentType', 'Database'))]
			[generateDBForAndroid(aPackage)/]
			[generateDBForWindows(aPackage, p.name.toUpperFirst())/]
		[/if]
	
		[comment]Solo creamos este archivo Si existe por lo menos una entidad tipo FILE[/comment]
		[if (aPackage.isPackageHasThisPropertyStereotype('persistentEntity', 'persistentType', 'File'))]
			[generateFilesForAndroid(aPackage)/]
			[generateFilesForWindows(aPackage, p.name.toUpperFirst())/]
		[/if]
	
		[comment]Solo creamos este archivo Si existe por lo menos una entidad tipo KEYVALUE[/comment]
		[if (aPackage.isPackageHasThisPropertyStereotype('persistentEntity', 'persistentType', 'KeyValue'))]
			[generateKVForAndroid(aPackage)/]
			[generateKVForWindows(aPackage, p.name.toUpperFirst())/]
		[/if]
	[/if]
	
	[if (aPackage.hasStereotype('DataProvider'))]
		[for (aClass : Class | aClasses)]
			[if (aClass.hasStereotype('WebInterface'))]
				[generateRestAndroid(aClass)/]
				[generateRestWindows(aClass, p.name.toUpperFirst())/]
			[/if]
			
			[if (aClass.hasStereotype('HardwareDeviceInterface'))]
				[generateSensorsAndroid(aClass)/]
				[generateSensorsWindows(aClass, p.name.toUpperFirst())/]
			[/if]
		[/for]
	[/if]
[/let]
[/let]
[/for]
[/let]
[/template]



[template public generateSensorsAndroid(aClass : Class)]
	[comment]Sensors Utils[/comment]
	[generateGPSClass(aClass)/]
	[generateAudioActivity(aClass)/]
	[generateAudioActivityLayout(aClass)/]
	[generateCameraActivity(aClass)/]
	[generateCameraActivityLayout(aClass)/]

	[generateSensorActivities(aClass)/]
	[generateSensorActivitiesLayout(aClass)/]
[/template]

[template public generateSensorsWindows(aClass : Class, namespace : String)]
	[comment]Sensors Utils[/comment]
	[generateCameraPages(aClass, namespace)/]
	[generateCameraPagesLayout(aClass, namespace)/]
	[generateAudioRecordPages(aClass, namespace)/]
	[generateAudioRecordPagesLayout(aClass, namespace)/]

	[generateSensorsPages(aClass, namespace)/]
	[generateSensorsPagesLayout(aClass, namespace)/]
[/template]

[template public generateRestAndroid(aClass : Class)]
	[generateRestInterface(aClass)/]
	[generateRestClient(aClass)/]
	
	[generateRestActivities(aClass)/]
	[generateRestActivitiesLayout(aClass)/]
[/template]

[template public generateRestWindows(aClass : Class, namespace : String)]
	[generateRestWindowsInterface(aClass, namespace)/]
	[generateRestPages(aClass, namespace)/]
	[generateRestPagesLayout(aClass, namespace)/]
[/template]

[comment]*****************************************[/comment]
[template public generateGeneralAndroidClasses(model : Model)]
	[generateMainActivity(model)/]
	[generateMainActivityLayout(model)/]
	[generateConfigFiles(model)/]
	[generateBuildGradle(model)/]
	
[/template]

[template public generateGeneralWindowsClasses(model : Model)]
[generateAppPage(model)/]
[generateMainPage(model)/]
[generateMainPageLayout(model)/]

[/template]
[comment]*****************************************[/comment]
[template public generateDBForAndroid(aPackage : Package)]
[let aClasses: Set(Class) = aPackage.ownedElement->filter(Class) ]

[createDatabaseAndroid(aPackage)/]
[beansGenAndroid(aPackage)/]

	[for (aClass : Class | aClasses)]
		[generateBDActivities(aClass)/]
		[generateaBDActivitiesLayout(aClass)/]
	
		[generateBDFormActivities(aClass)/]
		[generateBDFormActivitiesLayout(aClass)/]
	
		[generateBDAdapters(aClass)/]
		[generateBDAdapterLayout(aClass)/]
	
		[generateDbTables(aClass)/]
	
		[generateDaoAndroid(aClass)/]
	[/for]
[/let]
[/template]

[comment]*****************************************[/comment]
[template public generateDBForWindows(aPackage : Package, namespace : String)]
[let aClasses: Set(Class) = aPackage.ownedElement->filter(Class) ]

[createWindowsDatabaseHelper(aPackage, namespace)/]
[beansGenWindows(aPackage)/]

[for (aClass : Class | aClasses)]
	[generateBDPages(aClass, namespace)/]
	[generateBDPagesLayout(aClass, namespace)/]

	[generateBDCreateFormPage(aClass, namespace)/]
	[generateBDCreateFormPageLayout(aClass, namespace)/]
	
	[generateBDDeleteUpdateFormPage(aClass, namespace)/]
	[generateBDDeleteUpdateFormPageLayout(aClass, namespace)/]
	
	[generateDaoWindows(aClass, namespace)/]
[/for]
[/let]
[/template]

[comment]*****************************************[/comment]
[template public generateFilesForAndroid(aPackage : Package)]
[let aClasses: Set(Class) = aPackage.ownedElement->filter(Class) ]

[createFileHelper(aPackage)/]

	[for (aClass : Class | aClasses)]
		[generateFileActivities(aClass)/]
		[generateFileActivitiesLayout(aClass)/]
	[/for]
[/let]
[/template]

[comment]*****************************************[/comment]
[template public generateFilesForWindows(aPackage : Package, namespace : String)]
[let aClasses: Set(Class) = aPackage.ownedElement->filter(Class) ]

[createFileHelperWindows(aPackage, namespace)/]
	
	[for (aClass : Class | aClasses)]	
		[generateFilePages(aClass, namespace)/]
		[generateFilePagesLayout(aClass, namespace)/]
	[/for]
[/let]
[/template]

[comment]*****************************************[/comment]
[template public generateKVForAndroid(aPackage : Package)]
[let aClasses: Set(Class) = aPackage.ownedElement->filter(Class) ]

[createSharedHelper(aPackage)/]

	[for (aClass : Class | aClasses)]
		[generateKVActivities(aClass)/]
		[generateKVActivitiesLayout(aClass)/]

		[generateKVFormActivities(aClass)/]
		[generateKVFormActivitiesLayout(aClass)/]
	
		[generateKVAdapters(aClass)/]
		[generateKVAdapterLayout(aClass)/]
	[/for]
[/let]
[/template]

[comment]*****************************************[/comment]
[template public generateKVForWindows(aPackage : Package, namespace : String)]
[let aClasses: Set(Class) = aPackage.ownedElement->filter(Class) ]

[createSharedHelperWindows(aPackage)/]

	[for (aClass : Class | aClasses)]
		[generateKVPages(aClass, namespace)/]
		[generateKVPagesLayout(aClass, namespace)/]

		[generateKVDeleteUpdateFormPage(aClass, namespace)/]
		[generateKVDeleteUpdateFormPageLayout(aClass, namespace)/]
	[/for]
[/let]
[/template]
