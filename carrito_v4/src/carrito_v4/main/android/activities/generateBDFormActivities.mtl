[comment encoding = UTF-8 /]
[module generateBDFormActivities('http://www.eclipse.org/uml2/5.0.0/UML')]

[import services::uml2services/]
[import common::utils_gen/]


[template public generateBDFormActivities(aClass : Class)]
[if (aClass.hasStereotype('persistentEntity'))]
[if (aClass.getValueOfStereotypePropertyEnumLit('Mobile Profile::persistentEntity', 'persistentType') = 'Database')]
[let persistentEntityProperties: Set(Property) = aClass.getAllAttributes()->select(getAppliedStereotypes()->exists(s: Stereotype |s.name='persistentEntityProperty'))]	

[file (aClass.classFileName('android/activities/', aClass, 'FormActivity','.java'), false)]

//[protected ('imports')]
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.TextInputEditText;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
//[/protected]

public class [aClass.name.toUpperFirst()/]FormActivity extends AppCompatActivity {
    private Boolean booleanEditMode = false;

	[for (p : Property | persistentEntityProperties)]
	private TextInputEditText tie[p.name.toUpperFirst()/]; 
	[/for]

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_form_[aClass.name.toLowerCase()/]);

        Intent intent = getIntent();
        if (intent.getStringExtra("typeOperation").equals("edit")) {
            booleanEditMode = true;
        }

        ActionBar actionBar = getSupportActionBar();
        if (actionBar != null) {
            actionBar.setTitle(booleanEditMode ? "Edit [aClass.name.toUpperFirst()/]" : "Add [aClass.name.toUpperFirst()/]");
            actionBar.setDisplayHomeAsUpEnabled(true);
        }

		[for (p : Property | persistentEntityProperties)]
		tie[p.name.toUpperFirst()/] =  (TextInputEditText) findViewById(R.id.tie[p.name.toUpperFirst()/]); 
		[/for]

       
        Button btnSave = (Button) findViewById(R.id.btnSave);

        if (booleanEditMode) {
            btnSave.setText("Save Changes");
            load[aClass.name.toUpperFirst()/]Data();
        }

        MySQLiteHelper db = new MySQLiteHelper(this);
        final [aClass.name.toUpperFirst()/]DAO [aClass.name.toLowerFirst()/]DAO = new [aClass.name.toUpperFirst()/]DAO(db);

        btnSave.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
               [aClass.name.toUpperFirst()/] [aClass.name.toLowerFirst()/] = get[aClass.name.toUpperFirst()/]FromEditext();
                if (booleanEditMode) {
                    [aClass.name.toLowerFirst()/]DAO.update[aClass.name.toUpperFirst()/]([aClass.name.toLowerFirst()/]);
                }else{
                    [aClass.name.toLowerFirst()/]DAO.add[aClass.name.toUpperFirst()/]([aClass.name.toLowerFirst()/]);
                }

                Intent returnIntent = new Intent();
                setResult(Activity.RESULT_OK, returnIntent);
                finish();
            }
        });

    }

	private void load[aClass.name.toUpperFirst()/]Data(){
		[aClass.name.toUpperFirst()/] [aClass.name.toLowerFirst()/] = ([aClass.name.toUpperFirst()/]) intent.getSerializableExtra("[aClass.name.toLowerFirst()/]");
        [for (p : Property | persistentEntityProperties)]
		[if(p.getMatchedTypeForJava('Mobile Profile::persistentEntityProperty', 'dataType') <> 'String')]
		tie[p.name.toUpperFirst()/].setText(String.valueOf([aClass.name.toLowerFirst()/].get[p.name.toUpperFirst()/]()));
		[else]
		tie[p.name.toUpperFirst()/].setText([aClass.name.toLowerFirst()/].get[p.name.toUpperFirst()/]());
		[/if] 
		[/for]
	}

    private [aClass.name.toUpperFirst()/] get[aClass.name.toUpperFirst()/]FromEditext() {
		[for (p : Property | persistentEntityProperties)]
		[if(p.getMatchedTypeForJava('Mobile Profile::persistentEntityProperty', 'dataType') <> 'String')]
		[p.stringToSpecificTypeAssignment(p.getMatchedTypeForJava('Mobile Profile::persistentEntityProperty', 'dataType'), 'tie'+p.name.toUpperFirst()+'.getText().toString()', p.name.toLowerFirst())/];
		[else]
		String [p.name.toLowerFirst()/] = tie[p.name.toUpperFirst()/].getText().toString();
		[/if]
		[/for]
        
        return new [aClass.name.toUpperFirst()/]([for (p : Property | persistentEntityProperties) separator(', ')][p.name/][/for]);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            // Respond to the action bar's Up/Home button
            case android.R.id.home:
                finish();
                return true;
        }
        return super.onOptionsItemSelected(item);

    }
}

[/file]
[/let]
[/if]
[/if]
[/template]
