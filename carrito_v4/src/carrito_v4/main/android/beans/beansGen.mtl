[comment encoding = UTF-8 /]
[module beansGen('http://www.eclipse.org/uml2/5.0.0/UML')]

[comment Se importa el mtl de services para poder utilizar las funciones definidas/]
[import services::uml2services/]
[import common::utils_gen/]


[template public beansGen(aPackage : Package)]
	[comment]Generamos los modelos para las entidades persistentes[/comment]

[for (aClass : Class | aPackage.ownedElement->filter(Class))]
[if (aClass.hasStereotype('persistentEntity'))]
[let persistentEntityProperties: Set(Property) = aClass.getAllAttributes()->select(getAppliedStereotypes()->exists(s: Stereotype |s.name='persistentEntityProperty'))]	

[file (aClass.classFileName('beans/', aClass, '' , '.java'), false)]
//[protected ('imports')]
import java.io.Serializable;
//[/protected]

[comment Getter y setters /]
public class [aClass.name.toUpperFirst()/]  implements Serializable{
	
[comment]Declaracion de los atributos incluyendo el List[/comment]
[for (p : Property | persistentEntityProperties) separator('\n')]

	[if (p.upper = -1 or p.upper > 1)]
	/**
	* the [p.name/] attribute.
	*/
	private List<[p.getMatchedTypeForJava('Mobile Profile::persistentEntityProperty', 'dataType')/]> [p.name/];
	[else]
	/**
	* the [p.name/] attribute.
	*/
	private [p.getMatchedTypeForJava('Mobile Profile::persistentEntityProperty', 'dataType')/] [p.name/];
	[/if]
[/for]
	

	/**
	* Empty Constructor.
	*/
	public [aClass.name.toUpperFirst()/] (){
	}

	/**
	* Constructor.
	*/
	public [aClass.name.toUpperFirst()/] ([for (p : Property | persistentEntityProperties) separator(', ')][if (p.upper = -1 or p.upper > 1)]List<[p.getMatchedTypeForJava('Mobile Profile::persistentEntityProperty', 'dataType')/]> [p.name/][else][p.getMatchedTypeForJava('Mobile Profile::persistentEntityProperty', 'dataType')/] [p.name/][/if][/for]){
	[for (p: Property | persistentEntityProperties)]     
		[if (p.upper = -1 or p.upper > 1)]
		this.[p.name/] = [p.name/];
		[else]
		this.[p.name/] = [p.name/];
		[/if]   
   [/for]
	}
	[comment]Declaracion de los atributos sin List [/comment]
	[comment]   [for (p: Property | aClass.attribute) separator('\n')]
     private [p.type.name/] [p.name/];
   	[/for][/comment]
 
	[comment]Getters [/comment]
   [for (p: Property | persistentEntityProperties) separator('\n')]     
	public [p.getMatchedTypeForJava('Mobile Profile::persistentEntityProperty', 'dataType')/] get[p.name.toUpperFirst()/]() {
       return this.[p.name/];
     }
   [/for]
 
	[comment]Setters[/comment]
	[for (p: Property | persistentEntityProperties) separator('\n')]
     public void set[p.name.toUpperFirst()/]([p.getMatchedTypeForJava('Mobile Profile::persistentEntityProperty', 'dataType')/] [p.name/]) {
        this.[p.name/] = [p.name/];
     }
   [/for]

	[comment]Funciones declaradas en Operations[/comment]
	[for (o: Operation | aClass.ownedOperation) separator('\n')]
     public [o.type.name/] [o.name/]() {
       //[protected (o.name)]
       // TODO should be implemented
       //[/protected]

     }
   [/for]   

}
 [/file]
[/let]
[/if]
[/for]

[/template]


