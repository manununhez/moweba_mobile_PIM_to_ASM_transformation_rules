[comment encoding = UTF-8 /]
[module generateKVDeleteUpdateFormPage('http://www.eclipse.org/uml2/5.0.0/UML')]

[import services::uml2services/]
[import common::utils_gen/]


[template public generateKVDeleteUpdateFormPage(aClass : Class, modelName : String)]

[if (aClass.hasStereotype('persistentEntity'))]
[if (aClass.getValueOfStereotypePropertyEnumLit('Mobile Profile::persistentEntity', 'persistentType') = 'KeyValue')]
[let persistentEntityProperties: Set(Property) = aClass.getAllAttributes()->select(getAppliedStereotypes()->exists(s: Stereotype |s.name='persistentEntityProperty'))]	

[file (aClass.classFileName('windows/Views/'+aClass.name.toUpperFirst()+'/', aClass,  'FormDeleteUpdate','.xaml.cs'), false)]
//[protected ('imports')]
using [modelName/].Common;
using [modelName/].Model;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Navigation;
using WindowsStore.Common.Storage;
//[/protected]

namespace [modelName/].Views
{

    public sealed partial class [aClass.name.toUpperFirst()/]FormDeleteUpdate : Page
    {
        private NavigationHelper navigationHelper;
        private Model.User selectedUser;

        public [aClass.name.toUpperFirst()/]FormDeleteUpdate()
        {
            this.InitializeComponent();

            this.navigationHelper = new NavigationHelper(this);
            this.navigationHelper.LoadState += this.NavigationHelper_LoadState;
            this.navigationHelper.SaveState += this.NavigationHelper_SaveState;
        }

        public NavigationHelper NavigationHelper
        {
            get { return this.navigationHelper; }
        }


        private void NavigationHelper_LoadState(object sender, LoadStateEventArgs e)
        {
        }

        private void NavigationHelper_SaveState(object sender, SaveStateEventArgs e)
        {
        }

        protected override void OnNavigatedTo(NavigationEventArgs e)
        {
            this.navigationHelper.OnNavigatedTo(e);
            if (e != null)
            {
                selected[aClass.name.toUpperFirst()/] = e.Parameter as [aClass.name.toUpperFirst()/];
				if (selected[aClass.name.toUpperFirst()/] != null)
				{
				[for (p : Property | persistentEntityProperties)]
					[if(p.getMatchedTypeForCSharp('Mobile Profile::persistentEntityProperty', 'dataType') <> 'string')]
					[p.name.toLowerFirst()/]Tbx.Text = Convert.ToString(selected[aClass.name.toUpperFirst()/].[p.name.toLowerFirst()/]);
					[else]
					[p.name.toLowerFirst()/]Tbx.Text = selected[aClass.name.toUpperFirst()/].[p.name.toLowerFirst()/];
					[/if]
				[/for]
            	}
			}
        }

        protected override void OnNavigatedFrom(NavigationEventArgs e)
        {
            this.navigationHelper.OnNavigatedFrom(e);
        }

        private void btnDelete_click(object sender, RoutedEventArgs e)
        {
            [aClass.name.toUpperFirst()/] user = new [aClass.name.toUpperFirst()/]([for (p : Property | persistentEntityProperties)separator(', ')][p.name.toLowerFirst()/]Tbx.Text[/for]);
            StorageManager storage = new StorageManager("dataPersistence", false);
            storage.Remove("[aClass.name.toLowerFirst()/]");
            Frame.Navigate(typeof([aClass.name.toUpperFirst()/]View));

        }

        private void btnUpdate_click(object sender, RoutedEventArgs e)
        {
            [aClass.name.toUpperFirst()/] [aClass.name.toLowerFirst()/] = new [aClass.name.toUpperFirst()/]([for (p : Property | persistentEntityProperties)separator(', ')][p.name.toLowerFirst()/]Tbx.Text[/for]);
            StorageManager storage = new StorageManager("dataPersistence", false);
            storage.Save("[aClass.name.toLowerFirst()/]", [aClass.name.toLowerFirst()/]);
            Frame.Navigate(typeof([aClass.name.toUpperFirst()/]View));
        }

    }
}

[/file]
[/let]
[/if]
[/if]
[/template]
