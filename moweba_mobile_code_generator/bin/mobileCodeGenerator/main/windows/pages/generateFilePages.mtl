[comment encoding = UTF-8 /]
[module generateFilePages('http://www.eclipse.org/uml2/5.0.0/UML')]

[import services::uml2services/]
[import common::utils_gen/]

[template public generateFilePages(aClass : Class, namespace : String)]
[let persistentEntityProperties : Set(Property) = (aClass.getAllAttributes()->select(getAppliedStereotypes()->exists(s: Stereotype |s.name='persistentEntityProperty'))) ]			

[file (aClass.classFileName('windows/Views/'+aClass.name.toUpperFirst()+'/', aClass, 'View','.xaml.cs'), false)]
//[protected ('imports')]
using [namespace/].Common;
using System;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Navigation;
//[/protected]

namespace [namespace/].Views
{

    public sealed partial class [aClass.name.toUpperFirst()/]View : Page
    {
        private NavigationHelper navigationHelper;
        private string FILENAME = "[aClass.name.toUpperFirst()/]File.txt";

        public [aClass.name.toUpperFirst()/]View()
        {
            this.InitializeComponent();

            this.navigationHelper = new NavigationHelper(this);
            this.navigationHelper.LoadState += this.NavigationHelper_LoadState;
            this.navigationHelper.SaveState += this.NavigationHelper_SaveState;
        }

        public NavigationHelper NavigationHelper
        {
            get { return this.navigationHelper; }
        }

        private void NavigationHelper_LoadState(object sender, LoadStateEventArgs e)
        {
        }

        private void NavigationHelper_SaveState(object sender, SaveStateEventArgs e)
        {
        }


        protected override void OnNavigatedTo(NavigationEventArgs e)
        {
            this.navigationHelper.OnNavigatedTo(e);
        }

        protected override void OnNavigatedFrom(NavigationEventArgs e)
        {
            this.navigationHelper.OnNavigatedFrom(e);
        }
		
		/*
		* Writing data in file.
		*	Data Format: <data1> , <data2>, <data3>, so on...
		*/
        private async void btnWriteFile_Click(object sender, RoutedEventArgs e)
        {
			String content = [for (p : Property | persistentEntityProperties) separator(' + "," + ')][p.name.toLowerFirst()/]Tbx.Text[/for];
            await FilesHelper.WriteTextFile(FILENAME, content);
        }
		
		/*
		* Reading data from file
		*/
        private async void btnReadFile_Click(object sender, RoutedEventArgs e)
        {
            ResultTbx.Text = await FilesHelper.ReadTextFile(FILENAME);
        }
    }
}

[/file]
[/let]
[/template]

[template public generateFilePagesLayout(aClass : Class, namespace : String)]
[let persistentEntityProperties : Set(Property) = (aClass.getAllAttributes()->select(getAppliedStereotypes()->exists(s: Stereotype |s.name='persistentEntityProperty'))) ]			

[file (aClass.classFileName('windows/Views/'+aClass.name.toUpperFirst()+'/', aClass, 'View','.xaml'), false)]
<Page
    x:Class="[namespace/].Views.[aClass.name.toUpperFirst()/]View"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:[namespace/].Views">

    <ScrollViewer>
        <Grid x:Name="LayoutRoot">
            <!-- Title Panel -->
            <StackPanel Grid.Row="0" Margin="19,0,0,0">
                <TextBlock Text="[namespace/]" Style="{ThemeResource TitleTextBlockStyle}" Margin="0,12,0,0"/>
                <TextBlock Text="[aClass.name.toUpperFirst()/]" Margin="0,-6.5,0,5" Style="{ThemeResource HeaderTextBlockStyle}" CharacterSpacing="{ThemeResource PivotHeaderItemCharacterSpacing}"/>
            </StackPanel>

            <StackPanel Grid.Row="0" Margin="19,100,0,0">
                <TextBox x:Name="ResultTbx" HorizontalAlignment="Center" Margin="10,10,10,0" TextWrapping="Wrap" Height="100" Width="340" Background="Azure"/>
                [for (p : Property | persistentEntityProperties)]
                <TextBlock Text="[p.name.toLowerFirst()/]" FontSize="14"/>
                <TextBox x:Name="[p.name.toLowerFirst()/]Tbx" TextWrapping="Wrap" Width="350"/>
				[/for]

                <Button x:Name="btnWriteToFile" Content="Write to file" HorizontalAlignment="Center" Height="71" Width="304" Click="btnWriteFile_Click"/>
                <Button x:Name="btnReadFromFile" Content="Read from file" HorizontalAlignment="Center" Height="71" Width="304" Click="btnReadFile_Click"/>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</Page>
[/file]
[/let]
[/template]
